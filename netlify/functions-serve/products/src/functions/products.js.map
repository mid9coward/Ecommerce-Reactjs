{
  "version": 3,
  "sources": ["../../../../OneDrive/M\u00E1y t\u00EDnh/FSW/demos/e-commerce/E-commerce-Reactjs/node_modules/dotenv/lib/main.js", "../../../../OneDrive/M\u00E1y t\u00EDnh/FSW/demos/e-commerce/E-commerce-Reactjs/functions/products.js"],
  "sourceRoot": "C:/Users/ADMIN/AppData/Local/Temp/tmp-25520-WO2fx9zkaFGe",
  "sourcesContent": ["const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n", "import dotenv from \"dotenv\";\r\nimport Airtable from \"airtable\";\r\n\r\ndotenv.config();\r\n\r\nconst { AIRTABLE_ACCESS_TOKEN, AIRTABLE_BASE_ID, AIRTABLE_TABLE_NAME } =\r\n  process.env;\r\n\r\nif (!AIRTABLE_ACCESS_TOKEN || !AIRTABLE_BASE_ID || !AIRTABLE_TABLE_NAME) {\r\n  throw new Error(\"Missing required environment variables for Airtable.\");\r\n}\r\n\r\nconst base = new Airtable({ apiKey: AIRTABLE_ACCESS_TOKEN }).base(\r\n  AIRTABLE_BASE_ID\r\n);\r\n\r\nexport async function handler(event, context) {\r\n  try {\r\n    const response = await base(AIRTABLE_TABLE_NAME)\r\n      .select({ maxRecords: 200 })\r\n      .firstPage();\r\n\r\n    const products = response.map((product) => {\r\n      const { id, fields } = product;\r\n      const {\r\n        name,\r\n        featured,\r\n        price,\r\n        colors,\r\n        company,\r\n        description,\r\n        category,\r\n        shipping,\r\n        image = [],\r\n      } = fields;\r\n\r\n      return {\r\n        id,\r\n        name,\r\n        featured,\r\n        price,\r\n        colors,\r\n        company,\r\n        description,\r\n        category,\r\n        shipping,\r\n        image: image.length > 0 ? image[0].url : null,\r\n      };\r\n    });\r\n\r\n    return {\r\n      statusCode: 200,\r\n      body: JSON.stringify(products),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({ error: error.message }),\r\n    };\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
